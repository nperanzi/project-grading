name: EventBrite Clone project tests
scenarios:
  - when: I visit the homepage at {{url}}
    key: homepage
    tests:
      - it: is "up"
        key: up
        desc: >
          I get a "200 OK" HTTP response. This basically just means
          that your website is up.

      - it: has a title
        key: title
        desc: >
          I test for a non-zero length string in the <title></title> tags of the
          page. Your title is "{{title}}"

      - it: has valid HTML
        key: valid
        desc: >
          I run your homepage through https://validator.w3.org/nu to check it
          for errors.

      - it: uses a popular CSS framework
        key: cssFramework
        desc: >
          I'm looking for "bootstrap", "bulma", "material", "foundation", or "semantic" in
          the href attribute of a <link> element in the <head> of your document.
          You should be using one of those CSS frameworks to make your pages
          look rad. Google it.

      - it: has links to all your events
        key: eventLinks
        desc: >
          I check for {{events.length}} <a> elements with href attributes containing
          {% for event in events %}
            {% if loop.last %}and{% endif %}'/events/{{event.id}}'{% if loop.last %}.{% else %},{% endif %}
          {% endfor %}
          Of course, you might have other events.
          The CSS selector for these is something like 'a[href*="/events/0"]'.

      - it: each event has a time associated with it
        key: eventTimes
        desc: >
          I'm testing for the existence of three or more <time> tags on the page.

      - it: has a link to your about page in the footer
        key: aboutPageLink
        desc: >
          I'm testing for an <a> element with "/about" in its href attribute
          inside of a <footer> element on your page.

      - it: has a link to your home page in the footer
        key: homePageLink
        desc: >
          I'm testing for an <a> element with "/" alone in its href attribute
          inside of a <footer> element on your page.

      - it: has a logo
        key: logo
        desc: >
          I'm testing for an <img> tag with id="logo" inside a <header> element
          on your page.

      - it: has a link to create a new event
        key: createEventLink
        desc: >
          I'm testing for an <a> tag with an href containing "/events/new"
  - when: I visit the about page at {{url}}/about
    key: about
    tests:
      - it: exists
        key: exists
        desc: >
          I get a "200 OK" HTTP response. 

      - it: contains your team nickname
        key: nickname
        desc: >
          I test that the text "{{nickname}}" appears somewhere on the page
  - when: I visit an event detail page at /events/{{event.id}} (randomly chosen)
    key: eventDetail
    tests:
      - it: exists
        key: exists
        desc: >
          I get a "200 OK" HTTP response. 

      - it: has a link to your about page in the footer
        key: aboutPageLink
        desc: >
          I'm testing for an <a> element with "/about" in its href attribute
          inside of a <footer> element on your page.

      - it: has a link to your home page in the footer
        key: homePageLink
        desc: >
          I'm testing for an <a> element with "/" alone in its href attribute
          inside of a <footer> element on your page.

      - it: has an h1 element with the event title
        key: title
        desc: >
          I'm testing for an <a> element with "/" alone in its href attribute
          inside of a <footer> element on your page.

      - it: has no errors shown on the page
        key: noError
        desc: >
          I'm checking for elements with one of the following
          classes- {{errorClasses}}.

      - it: has a link to donate to the event
        key: donateLink
        desc: >
          I'm checking for an <a> with href containing {{link}}

      - it: shows the people who have RSVP'd for the event
        key: attending
        desc: >
          You should be showing at least these people attending-
          {% set comma = joiner() %}
          {% for person in event.attending -%}
            {{comma()}} {{person}}
          {%- endfor %}.

      - it: has a form for RSVP'ing to the event
        key: rsvpForm
        desc: >
          I test for a form with action="POST" on the page.

      - it: has an RSVP form has an input for the user's email address
        key: rsvpFormEmail
        desc: >
          I test for a an input with type="email" and name="email"
          inside a form element.

      - it: has a submit button
        key: rsvpFormSubmit
        desc: >
          I test for a an input with type="submit" inside a form element.
          You can also use a button with type="submit".

      - it: should allow {{email}} to RSVP
        key: validRSVP
        desc: >
          I fill out the email input and submit the form. After the
          form is submitted I check the page for the presence of
          {{email}} among those attending and a confirmation code
          of {{confirmationCode}}, which is the first seven characters
          of the sha256 hash of {{email}}.

      - it: should not allow {{email}} to RSVP
        key: invalidRSVP
        desc: >
          I fill out the email input and submit the form. After the
          form is submitted I check the page for the presence of the
          email address among those attending. It should not be 
          there. Note that I am turning off client-side form validation
          so that you'll have to handle validation on the server!
          I also check for an element with class="errors". This should
          be there and it should show the user a message like 
          "only Yalies!", though, the particular message doesn't matter.

  - when: I visit your API at /api/events
    key: api
    tests:
      - it: exists
        key: exists
        desc: >
          I get a HTTP 200 OK response.

      - it: is valid JSON format
        key: json
        desc: >
          I try to parse your response assuming it is valid JSON.
          Errors make the test fail.

      - it: has all the default events
        key: defaultEvents
        desc: >
          I'm checking for events with ids
          {% for event in events -%}
            {% if loop.last %}and {% endif %}{{event.id}}{% if loop.last %}.{% else %},{% endif %}
          {% endfor -%}.
          Your JSON should be formatted such that it has a key "events" that stores an array of
          events. E.g. it should looks something like this
          https://bit.ly/2J5IA2g

  - when: I visit your API for a specific event at /api/events/{{event.id}}
    key: apiEventDetail
    tests:
      - it: exists
        key: exists
        desc: >
          I get a HTTP 200 OK response.

      - it: is valid JSON format
        key: json
        desc: >
          I try to parse your response assuming it is valid JSON.
          Errors make the test fail.

      - it: has the right event information
        key: info
        desc: >
          I should find that it has the right title information. The
          title should be "{{event.title}}".

  - when: I visit page for creating a new event at /events/new
    key: eventCreation
    tests:
      - it: exists
        key: exists
        desc: >
          I get a HTTP 200 OK response.

      - it: has a form for submitting a new event
        key: form
        desc: >
          I test for a form element on the page

      - it: the form has inputs for title, location, image URL, and date
        key: formFields
        wrap: false
        desc: >
          I test for the following CSS selectors

          {% for selector in selectors -%}
            * {{selector|safe}}
          {% endfor -%}.
